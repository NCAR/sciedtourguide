{"version":3,"sources":["../../src/pages/transcript/transcript.module.ts","../../src/components/titlebar/title.module.ts","../../src/components/titlebar/title.component.ts","../../node_modules/ionic-audio/dist/ionic-audio-providers.js","../../node_modules/ionic-audio/dist/ionic-audio-web-track.js","../../node_modules/ionic-audio/dist/ionic-audio-cordova-track.js","../../node_modules/ionic-audio/dist/index.js","../../node_modules/ionic-audio/dist/ionic-audio-track-component.js","../../node_modules/ionic-audio/dist/ionic-audio-track-progress-component.js","../../node_modules/ionic-audio/dist/ionic-audio-track-play-component.js","../../node_modules/ionic-audio/dist/ionic-audio-time-pipe.js","../../node_modules/ionic-audio/dist/ionic-audio-playlist-item-directive.js","../../src/pages/transcript/transcript.ts","../../node_modules/ionic-audio/dist/ionic-audio.module.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACF;AACQ;AAC8D;AACpC;AAEzE;IACH,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,yEAAoB,EAAE,CAAC,CAAC,CAAC,IAAI,qEAAgB,EAAE,CAAC;AACpG,CAAC;AAaD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAXhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mEAAc;aACf;YACD,OAAO,EAAE;gBACP,+FAAoB;gBACpB,4EAAe,CAAC,QAAQ,EAAE;gBAC1B,sEAAe,CAAC,QAAQ,CAAC,mEAAc,CAAC;gBACxC,qEAAgB,CAAC,OAAO,CAAC,gFAA2B,CAAC;aACtD;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;ACtBQ;AACG;AACO;AACG;AActD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAZhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAc;aACf;YACD,OAAO,EAAE;gBACP,kEAAW;gBACX,4EAAe;aAChB;YACD,OAAO,EAAE;gBACP,wEAAc;aACf;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;ACjBgB;AAMjD;IAKE;QACE,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;YACrB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAChC;IACH,CAAC;IARQ;QAAR,oEAAK,EAAE;;iDAAe;IACd;QAAR,oEAAK,EAAE;;wDAAkB;IACjB;QAAR,oEAAK,EAAE;;yDAAsB;IAHnB,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACc;SACpC,CAAC;;OACW,cAAc,CAU1B;IAAD,CAAC;AAAA;SAVY,cAAc,oB;;;;;;;;ACN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC0C;AACa;AACQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6EAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,wCAAwC,EAAE;AAClH,gDAAgD,6EAAa,kBAAkB,6EAAa;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qFAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;AAC+B;AAChC,iD;;;;;;;;AClUA;AAAA;AAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uBAAuB,EAAE;AACzF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,uBAAuB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD;AACA,SAAS,gCAAgC,OAAO,+DAAQ,EAAE,IAAI;AAC9D,MAAM;AACN;AACA,CAAC;AACwB;AACzB,iD;;;;;;;;ACxXA;AAAA;AAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6DAAM,EAAE,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,4BAA4B;AAC5B,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,oDAAoD;AACpD;AACA,MAAM;AACN;AACA,CAAC;AAC4B;AAC7B,qD;;;;;;;;AC7XA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACI;AACE;AACS;AACJ;AACX;AACH;AACiB;AACtD,iC;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACA;AACQ;AACO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,4BAA4B,mEAAY;AACxC;AACA;AACA;AACA;AACA,oCAAoC,6EAAa,6BAA6B,qFAAiB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,6EAAa,GAAG;AAChC,MAAM;AACN;AACA,mBAAmB,OAAO,4DAAK,EAAE;AACjC,sBAAsB,OAAO,4DAAK,EAAE;AACpC,sBAAsB,OAAO,6DAAM,EAAE;AACrC;AACA;AACA,CAAC;AAC8B;AAC/B,uD;;;;;;;;ACtMA;AAAA;AAAA;AAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,qEAAqE,iCAAiC,cAAc,iCAAiC;AACrJ,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,wBAAwB,OAAO,4DAAK,EAAE;AACtC;AACA;AACA,CAAC;AACsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mEAAY;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,oJAAoJ,iCAAiC,gUAAgU,iCAAiC;AACthB,iBAAiB,IAAI;AACrB;AACA;AACA,iEAAiE,WAAW;AAC5E;AACA,wBAAwB,OAAO,4DAAK,EAAE;AACtC,sBAAsB,OAAO,6DAAM,EAAE;AACrC,sBAAsB,OAAO,4DAAK,EAAE;AACpC,sBAAsB,OAAO,4DAAK,EAAE;AACpC;AACA;AACA,CAAC;AACyC;AAC1C,gE;;;;;;;;ACvHA;AAAA;AAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,iEAAU,GAAG;AAC7B,MAAM;AACN;AACA,wBAAwB,OAAO,4DAAK,EAAE;AACtC,mBAAmB,OAAO,4DAAK,EAAE;AACjC,kBAAkB,OAAO,4DAAK,EAAE;AAChC;AACA;AACA,CAAC;AACkC;AACnC,4D;;;;;;;;AC3FA;AAAA;AAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,2DAAI,UAAU,oBAAoB,IAAI;AACtD;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACwB;AACzB,iD;;;;;;;;AChDA;AAAA;AAAA;AAAqF;AAC7B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,OAAO,6EAAa,GAAG;AAChC,MAAM;AACN;AACA,mBAAmB,OAAO,4DAAK,EAAE;AACjC,0BAA0B,OAAO,4DAAK,EAAE;AACxC,gCAAgC,OAAO,6DAAM,EAAE;AAC/C,qBAAqB,OAAO,mEAAY,oBAAoB;AAC5D;AACA;AACA,CAAC;AACqC;AACtC,+D;;;;;;;;;;;;;;;;;;;;;;AC1D0C;AACe;AACf;AACE;AAO5C;IAQE,wBAAoB,cAA6B,EAAS,SAAoB,EAAS,UAAqB;QAAxF,mBAAc,GAAd,cAAc,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,eAAU,GAAV,UAAU,CAAW;QAN5G,kBAAa,GAAW,KAAK,CAAC;QAO5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,wCAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,GAAC,IAAI,CAAC,MAAM,GAAC,GAAG,GAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IAClF,CAAC;IACD,yCAAgB,GAAhB;QACE,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,EAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC7E,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,EAAC,kBAAkB,EAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC9E,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IACD,2CAAkB,GAAlB;QACE,iFAAiF;QACjF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC9C,CAAC;IACD,wCAAe,GAAf,UAAgB,KAAU;QACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,EAAC,WAAW,EAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IACD,mCAAU,GAAV,UAAW,KAAU;QAClB,IAAK,IAAI,CAAC,aAAa,IAAI,IAAI,EAC/B;YACE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,EAAC,OAAO,EAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACnE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aAAM,IAAG,IAAI,CAAC,aAAa,IAAI,KAAK,EAAC;YACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC7E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,EAAC,MAAM,EAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAClE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACJ,CAAC;IA3CU,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;uBAS4G;OARjG,cAAc,CA6C1B;IAAD,CAAC;AAAA;SA7CY,cAAc,e;;;;;;;;ACV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAClB;AACH;AACwB;AACiD;AACxC;AACrB;AACA;AAC2B;AAC5E;AACP;AACA,QAAQ,yFAAmB;AAC3B,QAAQ,0GAA2B;AACnC,QAAQ,6GAA8B;AACtC,QAAQ,kGAAuB;AAC/B,QAAQ,6EAAa;AACrB,QAAQ,wGAA0B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU,6EAAa;AACxC;AACA;AACA;AACA;AACA,SAAS,OAAO,+DAAQ;AACxB,8BAA8B,qEAAY,EAAE,kEAAW;AACvD;AACA;AACA;AACA,8BAA8B,6EAAsB;AACpD,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;AAC2B;AAC5B,8C","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranscriptPage } from './transcript';\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { IonicAudioModule, WebAudioProvider, CordovaMediaProvider, defaultAudioProviderFactory } from 'ionic-audio';\nimport { TitleComponentModule } from './../../components/titlebar/title.module';\n\nexport function myCustomAudioProviderFactory() {\n    return (window.hasOwnProperty('cordova')) ? new CordovaMediaProvider() : new WebAudioProvider();\n}\n\n@NgModule({\n  declarations: [\n    TranscriptPage,\n  ],\n  imports: [\n    TitleComponentModule,\n    TranslateModule.forChild(),\n    IonicPageModule.forChild(TranscriptPage),\n    IonicAudioModule.forRoot(defaultAudioProviderFactory)\n  ],\n})\nexport class TranscriptPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transcript/transcript.module.ts","import { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TitleComponent } from './title.component';\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n  declarations: [\n    TitleComponent,\n  ],\n  imports: [\n    IonicModule,\n    TranslateModule\n  ],\n  exports: [\n    TitleComponent\n  ]\n})\nexport class TitleComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/titlebar/title.module.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: 'title.component.html',\n})\nexport class TitleComponent {\n  @Input() title: string;\n  @Input() selectedItem:any;\n  @Input() titlebarColor:string;\n\n  constructor() {\n    if(!this.titlebarColor){\n      this.titlebarColor = \"primary\";\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/titlebar/title.component.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Injectable } from '@angular/core';\r\nimport { WebAudioTrack } from './ionic-audio-web-track';\r\nimport { CordovaAudioTrack } from './ionic-audio-cordova-track';\r\n/**\r\n * Creates an audio provider based on the environment.\r\n * If running from within a browser, then defaults to HTML5 Audio. If running on a device, it will check for Cordova and Media plugins and use\r\n * a native audio player, otherwise falls back to HTML5 audio.\r\n *\r\n * @method factory\r\n * @static\r\n * @return {IAudioProvider} An IAudioProvider instance\r\n */\r\nexport function defaultAudioProviderFactory() {\r\n    return window.hasOwnProperty('cordova') && window.hasOwnProperty('Media') ? new CordovaMediaProvider() : new WebAudioProvider();\r\n}\r\n/**\r\n * Base class for audio providers\r\n *\r\n * @export\r\n * @abstract\r\n * @class AudioProvider\r\n * @implements {IAudioProvider}\r\n */\r\nvar AudioProvider = (function () {\r\n    function AudioProvider() {\r\n    }\r\n    /**\r\n     * Creates an IAudioTrack instance from a JSON object.\r\n     * Not implemented in base class.\r\n     *\r\n     * @method create\r\n     * @param {ITrackConstraint} track A JSON object containing at least a src property\r\n     * @return null\r\n     */\r\n    /**\r\n       * Creates an IAudioTrack instance from a JSON object.\r\n       * Not implemented in base class.\r\n       *\r\n       * @method create\r\n       * @param {ITrackConstraint} track A JSON object containing at least a src property\r\n       * @return null\r\n       */\r\n    AudioProvider.prototype.create = /**\r\n       * Creates an IAudioTrack instance from a JSON object.\r\n       * Not implemented in base class.\r\n       *\r\n       * @method create\r\n       * @param {ITrackConstraint} track A JSON object containing at least a src property\r\n       * @return null\r\n       */\r\n    function (track) {\r\n        console.error('Not implemented in base class');\r\n        return null;\r\n    };\r\n    /**\r\n     * Replaces track with a new one\r\n     * @param oldAudioTrack\r\n     * @param newTrack\r\n     */\r\n    /**\r\n       * Replaces track with a new one\r\n       * @param oldAudioTrack\r\n       * @param newTrack\r\n       */\r\n    AudioProvider.prototype.replace = /**\r\n       * Replaces track with a new one\r\n       * @param oldAudioTrack\r\n       * @param newTrack\r\n       */\r\n    function (oldAudioTrack, newTrack) {\r\n        console.error('Not implemented in base class');\r\n        return null;\r\n    };\r\n    /**\r\n     * Adds an existing IAudioTrack instance to the array of managed tracks.\r\n     *\r\n     * @method add\r\n     * @param {IAudioTrack} audioTrack An instance of IAudioTrack\r\n     */\r\n    /**\r\n       * Adds an existing IAudioTrack instance to the array of managed tracks.\r\n       *\r\n       * @method add\r\n       * @param {IAudioTrack} audioTrack An instance of IAudioTrack\r\n       */\r\n    AudioProvider.prototype.add = /**\r\n       * Adds an existing IAudioTrack instance to the array of managed tracks.\r\n       *\r\n       * @method add\r\n       * @param {IAudioTrack} audioTrack An instance of IAudioTrack\r\n       */\r\n    function (audioTrack) {\r\n        AudioProvider.tracks.push(audioTrack);\r\n    };\r\n    ;\r\n    /**\r\n     * Plays a given track.\r\n     *\r\n     * @method play\r\n     * @param {number} index The track id\r\n     */\r\n    /**\r\n       * Plays a given track.\r\n       *\r\n       * @method play\r\n       * @param {number} index The track id\r\n       */\r\n    AudioProvider.prototype.play = /**\r\n       * Plays a given track.\r\n       *\r\n       * @method play\r\n       * @param {number} index The track id\r\n       */\r\n    function (index) {\r\n        if (index === undefined || index > AudioProvider.tracks.length - 1)\r\n            return;\r\n        this._current = index;\r\n        AudioProvider.tracks[index].play();\r\n    };\r\n    ;\r\n    /**\r\n     * Pauses a given track.\r\n     *\r\n     * @method pause\r\n     * @param {number} [index] The track id, or if undefined it will pause whichever track currently playing\r\n     */\r\n    /**\r\n       * Pauses a given track.\r\n       *\r\n       * @method pause\r\n       * @param {number} [index] The track id, or if undefined it will pause whichever track currently playing\r\n       */\r\n    AudioProvider.prototype.pause = /**\r\n       * Pauses a given track.\r\n       *\r\n       * @method pause\r\n       * @param {number} [index] The track id, or if undefined it will pause whichever track currently playing\r\n       */\r\n    function (index) {\r\n        if (this._current === undefined || index > AudioProvider.tracks.length - 1)\r\n            return;\r\n        index = index || this._current;\r\n        AudioProvider.tracks[index].pause();\r\n    };\r\n    ;\r\n    /**\r\n     * Stops a given track.\r\n     *\r\n     * @method stop\r\n     * @param {number} [index] The track id, or if undefined it will stop whichever track currently playing\r\n     */\r\n    /**\r\n       * Stops a given track.\r\n       *\r\n       * @method stop\r\n       * @param {number} [index] The track id, or if undefined it will stop whichever track currently playing\r\n       */\r\n    AudioProvider.prototype.stop = /**\r\n       * Stops a given track.\r\n       *\r\n       * @method stop\r\n       * @param {number} [index] The track id, or if undefined it will stop whichever track currently playing\r\n       */\r\n    function (index) {\r\n        if (this._current === undefined || index > AudioProvider.tracks.length - 1)\r\n            return;\r\n        index = index || this._current;\r\n        AudioProvider.tracks[index].stop();\r\n        this._current = undefined;\r\n    };\r\n    ;\r\n    Object.defineProperty(AudioProvider.prototype, \"tracks\", {\r\n        /**\r\n         * Gets an array of tracks managed by this provider\r\n         *\r\n         * @property tracks\r\n         * @readonly\r\n         * @type {IAudioTrack[]}\r\n         */\r\n        get: /**\r\n           * Gets an array of tracks managed by this provider\r\n           *\r\n           * @property tracks\r\n           * @readonly\r\n           * @type {IAudioTrack[]}\r\n           */\r\n        function () {\r\n            return AudioProvider.tracks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioProvider.prototype, \"current\", {\r\n        /**\r\n         * Gets current track id\r\n         *\r\n         * @property current\r\n         * @type {number}\r\n         */\r\n        get: /**\r\n           * Gets current track id\r\n           *\r\n           * @property current\r\n           * @type {number}\r\n           */\r\n        function () {\r\n            return this._current;\r\n        },\r\n        /**\r\n         * Sets current track id\r\n         *\r\n         * @property current\r\n         */\r\n        set: /**\r\n           * Sets current track id\r\n           *\r\n           * @property current\r\n           */\r\n        function (v) {\r\n            this._current = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioProvider.tracks = [];\r\n    AudioProvider.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioProvider.ctorParameters = function () { return []; };\r\n    return AudioProvider;\r\n}());\r\nexport { AudioProvider };\r\n/**\r\n * Creates an HTML5 audio provider\r\n *\r\n * @export\r\n * @class WebAudioProvider\r\n * @constructor\r\n * @extends {AudioProvider}\r\n */\r\nvar WebAudioProvider = (function (_super) {\r\n    __extends(WebAudioProvider, _super);\r\n    function WebAudioProvider() {\r\n        var _this = _super.call(this) || this;\r\n        console.log('Using Web Audio provider');\r\n        return _this;\r\n    }\r\n    WebAudioProvider.prototype.create = function (track) {\r\n        var audioTrack = new WebAudioTrack(track.src, track.preload);\r\n        Object.assign(audioTrack, track);\r\n        var trackId = WebAudioProvider.tracks.push(audioTrack);\r\n        audioTrack.id = trackId - 1;\r\n        return audioTrack;\r\n    };\r\n    WebAudioProvider.prototype.replace = function (oldAudioTrack, newTrack) {\r\n        //WebAudioProvider.tracks.pop();\r\n        var index = WebAudioProvider.tracks.findIndex(function (track) { return Object.is(oldAudioTrack, track); });\r\n        var newAudioTrack = newTrack instanceof WebAudioTrack ? newTrack : new WebAudioTrack(newTrack.src, newTrack.preload);\r\n        Object.assign(newAudioTrack, newTrack);\r\n        if (index > -1) {\r\n            WebAudioProvider.tracks.splice(index, 1, newAudioTrack);\r\n        }\r\n        else {\r\n            var trackId = WebAudioProvider.tracks.push(newAudioTrack);\r\n            newAudioTrack.id = trackId - 1;\r\n        }\r\n        console.log(\"Replaced audio track\", oldAudioTrack, newAudioTrack);\r\n        console.log(\"Current track list\", WebAudioProvider.tracks);\r\n        return newAudioTrack;\r\n    };\r\n    WebAudioProvider.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WebAudioProvider.ctorParameters = function () { return []; };\r\n    return WebAudioProvider;\r\n}(AudioProvider));\r\nexport { WebAudioProvider };\r\n/**\r\n * Creates a Cordova audio provider\r\n *\r\n * @export\r\n * @class CordovaMediaProvider\r\n * @constructor\r\n * @extends {AudioProvider}\r\n */\r\nvar CordovaMediaProvider = (function (_super) {\r\n    __extends(CordovaMediaProvider, _super);\r\n    function CordovaMediaProvider() {\r\n        var _this = _super.call(this) || this;\r\n        console.log('Using Cordova Media provider');\r\n        return _this;\r\n    }\r\n    CordovaMediaProvider.prototype.create = function (track) {\r\n        var audioTrack = new CordovaAudioTrack(track.src);\r\n        Object.assign(audioTrack, track);\r\n        var trackId = CordovaMediaProvider.tracks.push(audioTrack);\r\n        audioTrack.id = trackId - 1;\r\n        return audioTrack;\r\n    };\r\n    CordovaMediaProvider.prototype.replace = function (oldTrack, newTrack) {\r\n        return null;\r\n    };\r\n    CordovaMediaProvider.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    CordovaMediaProvider.ctorParameters = function () { return []; };\r\n    return CordovaMediaProvider;\r\n}(AudioProvider));\r\nexport { CordovaMediaProvider };\r\n//# sourceMappingURL=ionic-audio-providers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-providers.js\n// module id = 705\n// module chunks = 0","import { Injectable, Optional } from '@angular/core';\r\nwindow.AudioContext = window['AudioContext'] || window['webkitAudioContext'];\r\n/**\r\n * Creates an HTML5 audio track\r\n *\r\n * @export\r\n * @class WebAudioTrack\r\n * @constructor\r\n * @implements {IAudioTrack}\r\n */\r\nvar WebAudioTrack = (function () {\r\n    function WebAudioTrack(src, preload) {\r\n        if (preload === void 0) { preload = 'none'; }\r\n        // audio context not needed for now\r\n        // @Optional() private ctx: AudioContext = undefined\r\n        // this.ctx = this.ctx || new AudioContext();\r\n        this.src = src;\r\n        this.preload = preload;\r\n        this.isPlaying = false;\r\n        this.isFinished = false;\r\n        this._progress = 0;\r\n        this._completed = 0;\r\n        this.createAudio();\r\n    }\r\n    WebAudioTrack.prototype.createAudio = function () {\r\n        var _this = this;\r\n        this.audio = new Audio();\r\n        this.audio.src = this.src;\r\n        this.audio.preload = this.preload;\r\n        //this.audio.controls = true;\r\n        //this.audio.autoplay = false;\r\n        this.audio.addEventListener(\"timeupdate\", function (e) { _this.onTimeUpdate(e); }, false);\r\n        this.audio.addEventListener(\"error\", function (err) {\r\n            console.log(\"Audio error => track \" + _this.src, err);\r\n            _this.isPlaying = false;\r\n        }, false);\r\n        this.audio.addEventListener(\"canplay\", function () {\r\n            _this._isLoading = false;\r\n            _this._hasLoaded = true;\r\n        }, false);\r\n        this.audio.addEventListener(\"playing\", function () {\r\n            console.log(\"Playing track \" + _this.src);\r\n            _this.isFinished = false;\r\n            _this.isPlaying = true;\r\n        }, false);\r\n        this.audio.addEventListener(\"ended\", function () {\r\n            _this.isPlaying = false;\r\n            _this.isFinished = true;\r\n            _this._progress = 0;\r\n            _this._completed = 0;\r\n            _this._hasLoaded = false;\r\n            //this.destroy();\r\n            console.log('Finished playback');\r\n        }, false);\r\n        this.audio.addEventListener(\"durationchange\", function (e) {\r\n            _this._duration = e.target.duration;\r\n        }, false);\r\n    };\r\n    WebAudioTrack.prototype.onTimeUpdate = function (e) {\r\n        if (this.isPlaying && this.audio.currentTime > 0) {\r\n            this._progress = this.audio.currentTime;\r\n            this._completed = this.audio.duration > 0 ? Math.trunc(this.audio.currentTime / this.audio.duration * 100) / 100 : 0;\r\n        }\r\n    };\r\n    WebAudioTrack.formatTime = function (value) {\r\n        var s = Math.trunc(value % 60);\r\n        var m = Math.trunc((value / 60) % 60);\r\n        var h = Math.trunc(((value / 60) / 60) % 60);\r\n        return h > 0 ? (h < 10 ? '0' + h : h) + \":\" + (m < 10 ? '0' + m : m) + \":\" + (s < 10 ? '0' + s : s) : (m < 10 ? '0' + m : m) + \":\" + (s < 10 ? '0' + s : s);\r\n    };\r\n    Object.defineProperty(WebAudioTrack.prototype, \"id\", {\r\n        /**\r\n         * Gets the track id\r\n         *\r\n         * @property id\r\n         * @type {number}\r\n         */\r\n        get: /**\r\n           * Gets the track id\r\n           *\r\n           * @property id\r\n           * @type {number}\r\n           */\r\n        function () {\r\n            return this._id;\r\n        },\r\n        /**\r\n         * Sets the track id\r\n         *\r\n         * @property id\r\n         */\r\n        set: /**\r\n           * Sets the track id\r\n           *\r\n           * @property id\r\n           */\r\n        function (v) {\r\n            this._id = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"duration\", {\r\n        /**\r\n         * Gets the track duration, or -1 if it cannot be determined\r\n         *\r\n         * @property duration\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        get: /**\r\n           * Gets the track duration, or -1 if it cannot be determined\r\n           *\r\n           * @property duration\r\n           * @readonly\r\n           * @type {number}\r\n           */\r\n        function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"progress\", {\r\n        /**\r\n         * Gets current track time (progress)\r\n         *\r\n         * @property progress\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        get: /**\r\n           * Gets current track time (progress)\r\n           *\r\n           * @property progress\r\n           * @readonly\r\n           * @type {number}\r\n           */\r\n        function () {\r\n            return this._progress;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"completed\", {\r\n        /**\r\n         * Gets current track progress as a percentage\r\n         *\r\n         * @property completed\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        get: /**\r\n           * Gets current track progress as a percentage\r\n           *\r\n           * @property completed\r\n           * @readonly\r\n           * @type {number}\r\n           */\r\n        function () {\r\n            return this._completed;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"error\", {\r\n        /**\r\n         * Gets any errors logged by HTML5 audio\r\n         *\r\n         * @property error\r\n         * @readonly\r\n         * @type {MediaError}\r\n         */\r\n        get: /**\r\n           * Gets any errors logged by HTML5 audio\r\n           *\r\n           * @property error\r\n           * @readonly\r\n           * @type {MediaError}\r\n           */\r\n        function () {\r\n            return this.audio && this.audio.error;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"canPlay\", {\r\n        /**\r\n         * Gets a boolean value indicating whether the current source can be played\r\n         *\r\n         * @property canPlay\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        get: /**\r\n           * Gets a boolean value indicating whether the current source can be played\r\n           *\r\n           * @property canPlay\r\n           * @readonly\r\n           * @type {boolean}\r\n           */\r\n        function () {\r\n            var format = \"audio/\" + this.audio.src.substr(this.audio.src.lastIndexOf('.') + 1);\r\n            return this.audio && this.audio.canPlayType(format) != '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"isLoading\", {\r\n        /**\r\n         * Gets a boolean value indicating whether the track is in loading state\r\n         *\r\n         * @property isLoading\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        get: /**\r\n           * Gets a boolean value indicating whether the track is in loading state\r\n           *\r\n           * @property isLoading\r\n           * @readonly\r\n           * @type {boolean}\r\n           */\r\n        function () {\r\n            return this._isLoading;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WebAudioTrack.prototype, \"hasLoaded\", {\r\n        /**\r\n         * Gets a boolean value indicating whether the track has finished loading\r\n         *\r\n         * @property hadLoaded\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        get: /**\r\n           * Gets a boolean value indicating whether the track has finished loading\r\n           *\r\n           * @property hadLoaded\r\n           * @readonly\r\n           * @type {boolean}\r\n           */\r\n        function () {\r\n            return this._hasLoaded;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Plays current track\r\n     *\r\n     * @method play\r\n     */\r\n    /**\r\n       * Plays current track\r\n       *\r\n       * @method play\r\n       */\r\n    WebAudioTrack.prototype.play = /**\r\n       * Plays current track\r\n       *\r\n       * @method play\r\n       */\r\n    function () {\r\n        if (!this.audio) {\r\n            this.createAudio();\r\n        }\r\n        if (!this._hasLoaded) {\r\n            console.log(\"Loading track \" + this.src);\r\n            this._isLoading = true;\r\n        }\r\n        //var source = this.ctx.createMediaElementSource(this.audio);\r\n        //source.connect(this.ctx.destination);\r\n        this.audio.play();\r\n    };\r\n    /**\r\n     * Pauses current track\r\n     *\r\n     * @method pause\r\n     */\r\n    /**\r\n       * Pauses current track\r\n       *\r\n       * @method pause\r\n       */\r\n    WebAudioTrack.prototype.pause = /**\r\n       * Pauses current track\r\n       *\r\n       * @method pause\r\n       */\r\n    function () {\r\n        if (!this.isPlaying)\r\n            return;\r\n        console.log(\"Pausing track \" + this.src);\r\n        this.audio.pause();\r\n        this.isPlaying = false;\r\n    };\r\n    /**\r\n     * Stops current track and releases audio\r\n     *\r\n     * @method stop\r\n     */\r\n    /**\r\n       * Stops current track and releases audio\r\n       *\r\n       * @method stop\r\n       */\r\n    WebAudioTrack.prototype.stop = /**\r\n       * Stops current track and releases audio\r\n       *\r\n       * @method stop\r\n       */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.audio)\r\n            return;\r\n        this.pause();\r\n        this.audio.removeEventListener(\"timeupdate\", function (e) { _this.onTimeUpdate(e); });\r\n        this.isFinished = true;\r\n        //this.destroy();\r\n    };\r\n    /**\r\n     * Seeks to a new position within the track\r\n     *\r\n     * @method seekTo\r\n     * @param {number} time the new position to seek to\r\n     */\r\n    /**\r\n       * Seeks to a new position within the track\r\n       *\r\n       * @method seekTo\r\n       * @param {number} time the new position to seek to\r\n       */\r\n    WebAudioTrack.prototype.seekTo = /**\r\n       * Seeks to a new position within the track\r\n       *\r\n       * @method seekTo\r\n       * @param {number} time the new position to seek to\r\n       */\r\n    function (time) {\r\n        if (!this.audio)\r\n            return;\r\n        this.audio.currentTime = time;\r\n    };\r\n    /**\r\n     * Releases audio resources\r\n     *\r\n     * @method destroy\r\n     */\r\n    /**\r\n       * Releases audio resources\r\n       *\r\n       * @method destroy\r\n       */\r\n    WebAudioTrack.prototype.destroy = /**\r\n       * Releases audio resources\r\n       *\r\n       * @method destroy\r\n       */\r\n    function () {\r\n        this.audio = undefined;\r\n        console.log(\"Released track \" + this.src);\r\n    };\r\n    WebAudioTrack.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WebAudioTrack.ctorParameters = function () { return [\r\n        null,\r\n        { type: undefined, decorators: [{ type: Optional },] },\r\n    ]; };\r\n    return WebAudioTrack;\r\n}());\r\nexport { WebAudioTrack };\r\n//# sourceMappingURL=ionic-audio-web-track.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-web-track.js\n// module id = 712\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\r\n/**\r\n * Cordova Media audio track\r\n *\r\n * @export\r\n * @class CordovaAudioTrack\r\n * @constructor\r\n * @implements {IAudioTrack}\r\n */\r\nvar CordovaAudioTrack = (function () {\r\n    function CordovaAudioTrack(src) {\r\n        this.src = src;\r\n        this.isPlaying = false;\r\n        this.isFinished = false;\r\n        this._progress = 0;\r\n        this._completed = 0;\r\n        if (window['cordova'] === undefined || window['Media'] === undefined) {\r\n            console.log('Cordova Media is not available');\r\n            return;\r\n        }\r\n        ;\r\n        this._ngZone = new NgZone({ enableLongStackTrace: false });\r\n        this.createAudio();\r\n    }\r\n    CordovaAudioTrack.prototype.createAudio = function () {\r\n        var _this = this;\r\n        this.audio = new Media(this.src, function () {\r\n            console.log('Finished playback');\r\n            _this.stopTimer();\r\n            _this._ngZone.run(function () {\r\n                _this._progress = 0;\r\n                _this._completed = 0;\r\n                _this._hasLoaded = false;\r\n                _this.isFinished = true;\r\n                _this.isPlaying = false;\r\n            });\r\n            _this.destroy(); // TODO add parameter to control whether to release audio on stop or finished\r\n        }, function (err) {\r\n            console.log(\"Audio error => track \" + _this.src, err);\r\n        }, function (status) {\r\n            _this._ngZone.run(function () {\r\n                switch (status) {\r\n                    case Media.MEDIA_STARTING:\r\n                        console.log(\"Loaded track \" + _this.src);\r\n                        _this._hasLoaded = true;\r\n                        break;\r\n                    case Media.MEDIA_RUNNING:\r\n                        console.log(\"Playing track \" + _this.src);\r\n                        _this.isPlaying = true;\r\n                        _this._isLoading = false;\r\n                        break;\r\n                    case Media.MEDIA_PAUSED:\r\n                        _this.isPlaying = false;\r\n                        break;\r\n                    case Media.MEDIA_STOPPED:\r\n                        _this.isPlaying = false;\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CordovaAudioTrack.prototype.startTimer = function () {\r\n        var _this = this;\r\n        this._timer = setInterval(function () {\r\n            if (_this._duration === undefined) {\r\n                var duration = _this.audio.getDuration();\r\n                (duration > 0) && (_this._duration = Math.round(_this.audio.getDuration() * 100) / 100);\r\n            }\r\n            _this.audio.getCurrentPosition(function (position) {\r\n                return _this._ngZone.run(function () {\r\n                    if (position > -1) {\r\n                        _this._progress = Math.round(position * 100) / 100;\r\n                        _this._completed = _this._duration > 0 ? Math.round(_this._progress / _this._duration * 100) / 100 : 0;\r\n                    }\r\n                });\r\n            }, function (e) {\r\n                console.log(\"Error getting position\", e);\r\n            });\r\n        }, 1000);\r\n    };\r\n    CordovaAudioTrack.prototype.stopTimer = function () {\r\n        clearInterval(this._timer);\r\n    };\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"id\", {\r\n        /** public members */\r\n        /**\r\n       * Gets the track id\r\n       *\r\n       * @property id\r\n       * @type {number}\r\n       */\r\n        get: /** public members */\r\n        /**\r\n         * Gets the track id\r\n         *\r\n         * @property id\r\n         * @type {number}\r\n         */\r\n        function () {\r\n            return this._id;\r\n        },\r\n        /**\r\n       * Sets the track id\r\n       *\r\n       * @property id\r\n       */\r\n        set: /**\r\n         * Sets the track id\r\n         *\r\n         * @property id\r\n         */\r\n        function (v) {\r\n            this._id = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"duration\", {\r\n        /**\r\n       * Gets the track duration, or -1 if it cannot be determined\r\n       *\r\n       * @property duration\r\n       * @readonly\r\n       * @type {number}\r\n       */\r\n        get: /**\r\n         * Gets the track duration, or -1 if it cannot be determined\r\n         *\r\n         * @property duration\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"progress\", {\r\n        /**\r\n       * Gets current track time (progress)\r\n       *\r\n       * @property progress\r\n       * @readonly\r\n       * @type {number}\r\n       */\r\n        get: /**\r\n         * Gets current track time (progress)\r\n         *\r\n         * @property progress\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        function () {\r\n            return this._progress;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"completed\", {\r\n        /**\r\n       * Gets current track progress as a percentage\r\n       *\r\n       * @property completed\r\n       * @readonly\r\n       * @type {number}\r\n       */\r\n        get: /**\r\n         * Gets current track progress as a percentage\r\n         *\r\n         * @property completed\r\n         * @readonly\r\n         * @type {number}\r\n         */\r\n        function () {\r\n            return this._completed;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"error\", {\r\n        /**\r\n         * Gets any errors logged by HTML5 audio\r\n         *\r\n         * @property error\r\n         * @readonly\r\n         * @type {MediaError}\r\n         */\r\n        get: /**\r\n         * Gets any errors logged by HTML5 audio\r\n         *\r\n         * @property error\r\n         * @readonly\r\n         * @type {MediaError}\r\n         */\r\n        function () {\r\n            return this.audio.error;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"canPlay\", {\r\n        /**\r\n       * Gets a boolean value indicating whether the current source can be played\r\n       *\r\n       * @property canPlay\r\n       * @readonly\r\n       * @type {boolean}\r\n       */\r\n        get: /**\r\n         * Gets a boolean value indicating whether the current source can be played\r\n         *\r\n         * @property canPlay\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"isLoading\", {\r\n        /**\r\n       * Gets a boolean value indicating whether the track is in loading state\r\n       *\r\n       * @property isLoading\r\n       * @readonly\r\n       * @type {boolean}\r\n       */\r\n        get: /**\r\n         * Gets a boolean value indicating whether the track is in loading state\r\n         *\r\n         * @property isLoading\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        function () {\r\n            return this._isLoading;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CordovaAudioTrack.prototype, \"hasLoaded\", {\r\n        /**\r\n       * Gets a boolean value indicating whether the track has finished loading\r\n       *\r\n       * @property hadLoaded\r\n       * @readonly\r\n       * @type {boolean}\r\n       */\r\n        get: /**\r\n         * Gets a boolean value indicating whether the track has finished loading\r\n         *\r\n         * @property hadLoaded\r\n         * @readonly\r\n         * @type {boolean}\r\n         */\r\n        function () {\r\n            return this._hasLoaded;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n   * Plays current track\r\n   *\r\n   * @method play\r\n   */\r\n    /**\r\n     * Plays current track\r\n     *\r\n     * @method play\r\n     */\r\n    CordovaAudioTrack.prototype.play = /**\r\n     * Plays current track\r\n     *\r\n     * @method play\r\n     */\r\n    function () {\r\n        if (!this.audio) {\r\n            this.createAudio();\r\n        }\r\n        if (!this._hasLoaded) {\r\n            console.log(\"Loading track \" + this.src);\r\n            this._isLoading = true;\r\n        }\r\n        this.audio.play();\r\n        this.startTimer();\r\n    };\r\n    /**\r\n   * Pauses current track\r\n   *\r\n   * @method pause\r\n   */\r\n    /**\r\n     * Pauses current track\r\n     *\r\n     * @method pause\r\n     */\r\n    CordovaAudioTrack.prototype.pause = /**\r\n     * Pauses current track\r\n     *\r\n     * @method pause\r\n     */\r\n    function () {\r\n        if (!this.isPlaying)\r\n            return;\r\n        console.log(\"Pausing track \" + this.src);\r\n        this.audio.pause();\r\n        this.stopTimer();\r\n    };\r\n    /**\r\n   * Stops current track and releases audio\r\n   *\r\n   * @method stop\r\n   */\r\n    /**\r\n     * Stops current track and releases audio\r\n     *\r\n     * @method stop\r\n     */\r\n    CordovaAudioTrack.prototype.stop = /**\r\n     * Stops current track and releases audio\r\n     *\r\n     * @method stop\r\n     */\r\n    function () {\r\n        this.audio.stop(); // calls Media onSuccess callback\r\n    };\r\n    /**\r\n   * Seeks to a new position within the track\r\n   *\r\n   * @method seekTo\r\n   * @param {number} time the new position (milliseconds) to seek to\r\n   */\r\n    /**\r\n     * Seeks to a new position within the track\r\n     *\r\n     * @method seekTo\r\n     * @param {number} time the new position (milliseconds) to seek to\r\n     */\r\n    CordovaAudioTrack.prototype.seekTo = /**\r\n     * Seeks to a new position within the track\r\n     *\r\n     * @method seekTo\r\n     * @param {number} time the new position (milliseconds) to seek to\r\n     */\r\n    function (time) {\r\n        // Cordova Media reports duration and progress as seconds, so we need to multiply by 1000\r\n        this.audio.seekTo(time * 1000);\r\n    };\r\n    /**\r\n     * Releases audio resources\r\n     *\r\n     * @method destroy\r\n     */\r\n    /**\r\n       * Releases audio resources\r\n       *\r\n       * @method destroy\r\n       */\r\n    CordovaAudioTrack.prototype.destroy = /**\r\n       * Releases audio resources\r\n       *\r\n       * @method destroy\r\n       */\r\n    function () {\r\n        this.audio.release();\r\n        console.log(\"Released track \" + this.src);\r\n    };\r\n    CordovaAudioTrack.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    CordovaAudioTrack.ctorParameters = function () { return [\r\n        null,\r\n    ]; };\r\n    return CordovaAudioTrack;\r\n}());\r\nexport { CordovaAudioTrack };\r\n//# sourceMappingURL=ionic-audio-cordova-track.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-cordova-track.js\n// module id = 713\n// module chunks = 0","export * from './ionic-audio-providers';\r\nexport * from './ionic-audio-web-track';\r\nexport * from './ionic-audio-cordova-track';\r\nexport * from './ionic-audio-track-component';\r\nexport * from './ionic-audio-track-progress-component';\r\nexport * from './ionic-audio-track-play-component';\r\nexport * from './ionic-audio-time-pipe';\r\nexport * from './ionic-audio.module';\r\nexport * from './ionic-audio-playlist-item-directive';\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/index.js\n// module id = 714\n// module chunks = 0","import { AudioProvider } from './ionic-audio-providers';\r\nimport { WebAudioTrack } from './ionic-audio-web-track';\r\nimport { CordovaAudioTrack } from './ionic-audio-cordova-track';\r\nimport { Component, EventEmitter, Output, Input } from '@angular/core';\r\n/**\r\n * # ```<audio-track>```\r\n *\r\n * Creates a top level audio-track component\r\n *\r\n * ## Usage\r\n *\r\n * ````\r\n *   <audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\r\n *   ...\r\n *   </audio-track>\r\n * ````\r\n * @element audio-track\r\n * @export\r\n * @class AudioTrackComponent\r\n */\r\nvar AudioTrackComponent = (function () {\r\n    function AudioTrackComponent(_audioProvider) {\r\n        this._audioProvider = _audioProvider;\r\n        /**\r\n           * Output property expects an event handler to be notified whenever playback finishes\r\n           *\r\n           * @property onFinish\r\n           * @type {EventEmitter}\r\n           */\r\n        this.onFinish = new EventEmitter();\r\n    }\r\n    AudioTrackComponent.prototype.ngOnInit = function () {\r\n        if (!this.track)\r\n            return;\r\n        if (!(this.track instanceof WebAudioTrack) && !(this.track instanceof CordovaAudioTrack)) {\r\n            this._audioTrack = this._audioProvider.create(this.track);\r\n        }\r\n        else {\r\n            if (this._audioTrack) {\r\n                Object.assign(this._audioTrack, this.track);\r\n                this._audioProvider.add(this._audioTrack);\r\n            }\r\n        }\r\n        if (this._audioTrack) {\r\n            // update input track parameter with track is so we pass it to WebAudioProvider if needed\r\n            this.track.id = this._audioTrack.id;\r\n        }\r\n    };\r\n    AudioTrackComponent.prototype.play = function () {\r\n        if (!this._audioTrack)\r\n            return;\r\n        this._audioTrack.play();\r\n        this._audioProvider.current = this._audioTrack.id;\r\n    };\r\n    AudioTrackComponent.prototype.pause = function () {\r\n        if (!this._audioTrack)\r\n            return;\r\n        this._audioTrack.pause();\r\n        this._audioProvider.current = undefined;\r\n    };\r\n    AudioTrackComponent.prototype.toggle = function () {\r\n        if (this._audioTrack.isPlaying) {\r\n            this.pause();\r\n        }\r\n        else {\r\n            this.play();\r\n        }\r\n    };\r\n    AudioTrackComponent.prototype.seekTo = function (time) {\r\n        if (!this._audioTrack)\r\n            return;\r\n        this._audioTrack.seekTo(time);\r\n    };\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"id\", {\r\n        get: function () {\r\n            return this._audioTrack ? this._audioTrack.id : -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"art\", {\r\n        get: function () {\r\n            return this.track ? this.track.art : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"artist\", {\r\n        get: function () {\r\n            return this.track ? this.track.artist : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"title\", {\r\n        get: function () {\r\n            return this.track ? this.track.title : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"progress\", {\r\n        get: function () {\r\n            return this._audioTrack ? this._audioTrack.progress : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"isPlaying\", {\r\n        get: function () {\r\n            return this._audioTrack && this._audioTrack.isPlaying;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"isFinished\", {\r\n        get: function () {\r\n            return this._audioTrack && this._audioTrack.isFinished;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._audioTrack ? this._audioTrack.duration : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"completed\", {\r\n        get: function () {\r\n            return this._audioTrack ? this._audioTrack.completed : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"canPlay\", {\r\n        get: function () {\r\n            return this._audioTrack && this._audioTrack.canPlay;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"error\", {\r\n        get: function () {\r\n            return this._audioTrack ? this._audioTrack.error : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"isLoading\", {\r\n        get: function () {\r\n            return this._audioTrack && this._audioTrack.isLoading;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackComponent.prototype, \"hasLoaded\", {\r\n        get: function () {\r\n            return this._audioTrack && this._audioTrack.hasLoaded;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioTrackComponent.prototype.ngDoCheck = function () {\r\n        // track has stopped, trigger finish event\r\n        if (this._audioTrack && this._audioTrack.isFinished) {\r\n            this.onFinish.emit(this.track);\r\n            this._audioTrack.isFinished = false;\r\n        }\r\n    };\r\n    AudioTrackComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.track.firstChange)\r\n            return;\r\n        if (this._audioTrack && this._audioTrack.isPlaying)\r\n            this._audioTrack.stop();\r\n        this._audioTrack = this._audioProvider.create(changes.track.currentValue);\r\n        console.log(\"ngOnChanges -> new audio track detected\", this._audioTrack);\r\n        this.autoplay && this._audioTrack.play();\r\n    };\r\n    AudioTrackComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'audio-track',\r\n                    template: '<ng-content></ng-content>'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioTrackComponent.ctorParameters = function () { return [\r\n        { type: AudioProvider, },\r\n    ]; };\r\n    AudioTrackComponent.propDecorators = {\r\n        \"track\": [{ type: Input },],\r\n        \"autoplay\": [{ type: Input },],\r\n        \"onFinish\": [{ type: Output },],\r\n    };\r\n    return AudioTrackComponent;\r\n}());\r\nexport { AudioTrackComponent };\r\n//# sourceMappingURL=ionic-audio-track-component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-track-component.js\n// module id = 715\n// module chunks = 0","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n/**\r\n * # ```<audio-track-progress>```\r\n *\r\n * Renders a timer component displaying track progress and duration\r\n *\r\n * ## Usage\r\n * ````\r\n * <audio-track-progress [audioTrack]=\"track\"></audio-track-progress>\r\n * ````\r\n *\r\n * @element audio-track-progress\r\n * @parents audio-track\r\n * @export\r\n * @class AudioTrackProgressComponent\r\n */\r\nvar AudioTrackProgressComponent = (function () {\r\n    function AudioTrackProgressComponent() {\r\n    }\r\n    AudioTrackProgressComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'audio-track-progress',\r\n                    template: '<em *ngIf=\"audioTrack.duration > 0\">{{audioTrack.progress | audioTime}} / </em><em>{{audioTrack.duration | audioTime}}</em>'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioTrackProgressComponent.ctorParameters = function () { return []; };\r\n    AudioTrackProgressComponent.propDecorators = {\r\n        \"audioTrack\": [{ type: Input },],\r\n    };\r\n    return AudioTrackProgressComponent;\r\n}());\r\nexport { AudioTrackProgressComponent };\r\n/**\r\n * # ```<audio-track-progress-bar>```\r\n *\r\n * Renders a progress bar with optional timer, duration and progress indicator\r\n *\r\n * ## Usage\r\n * ````\r\n *  <audio-track-progress-bar duration progress [audioTrack]=\"audio\"></audio-track-progress-bar>\r\n * ````\r\n *\r\n * @element audio-track-progress-bar\r\n * @parents audio-track\r\n * @export\r\n * @class AudioTrackProgressBarComponent\r\n */\r\nvar AudioTrackProgressBarComponent = (function () {\r\n    function AudioTrackProgressBarComponent() {\r\n        this.onFinish = new EventEmitter();\r\n    }\r\n    Object.defineProperty(AudioTrackProgressBarComponent.prototype, \"progress\", {\r\n        get: function () {\r\n            return this._showProgress;\r\n        },\r\n        set: /**\r\n           * Input property indicating whether to display track progress\r\n           *\r\n           * @property @Input() progress\r\n           * @type {boolean}\r\n           */\r\n        function (value) {\r\n            this._showProgress = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackProgressBarComponent.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._showDuration;\r\n        },\r\n        set: /**\r\n           * Input property indicating whether to display track duration\r\n           *\r\n           * @property @Input() duration\r\n           * @type {boolean}\r\n           */\r\n        function (value) {\r\n            this._showDuration = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioTrackProgressBarComponent.prototype.seekTo = function (value) {\r\n        if (!Number.isNaN(value))\r\n            this.audioTrack.seekTo(value);\r\n    };\r\n    AudioTrackProgressBarComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.audioTrack.firstChange)\r\n            return;\r\n        // stop old track just in case\r\n        var oldTrack = changes.audioTrack.previousValue;\r\n        if ((oldTrack) && (typeof oldTrack.stop === \"function\")) {\r\n            oldTrack.stop();\r\n        }\r\n    };\r\n    AudioTrackProgressBarComponent.prototype.ngDoCheck = function () {\r\n        if (this.audioTrack && this.audioTrack.isFinished) {\r\n            this.onFinish.emit(this.audioTrack);\r\n        }\r\n    };\r\n    AudioTrackProgressBarComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'audio-track-progress-bar',\r\n                    template: \"\\n    <time *ngIf=\\\"_showProgress\\\"><span *ngIf=\\\"audioTrack\\\" [style.opacity]=\\\"audioTrack.duration > 0 ? 1 : 0\\\">{{audioTrack.progress | audioTime}}</span></time>\\n    <input type=\\\"range\\\" #seeker min=\\\"0\\\" [max]=\\\"audioTrack ? audioTrack.duration : 0\\\" step=\\\"any\\\" [value]=\\\"audioTrack ? audioTrack.progress : 0\\\" (change)=\\\"seekTo(seeker.value)\\\">\\n    <time *ngIf=\\\"_showDuration\\\"><span *ngIf=\\\"audioTrack\\\" [style.opacity]=\\\"audioTrack.duration > 0 ? 1 : 0\\\">{{audioTrack.duration | audioTime}}</span></time>\\n    \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioTrackProgressBarComponent.ctorParameters = function () { return []; };\r\n    AudioTrackProgressBarComponent.propDecorators = {\r\n        \"audioTrack\": [{ type: Input },],\r\n        \"onFinish\": [{ type: Output },],\r\n        \"progress\": [{ type: Input },],\r\n        \"duration\": [{ type: Input },],\r\n    };\r\n    return AudioTrackProgressBarComponent;\r\n}());\r\nexport { AudioTrackProgressBarComponent };\r\n//# sourceMappingURL=ionic-audio-track-progress-component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-track-progress-component.js\n// module id = 716\n// module chunks = 0","import { Component, ElementRef, Input } from '@angular/core';\r\n/**\r\n * # ```<audio-track-play>```\r\n *\r\n * Renders a play/pause button that optionally displays a loading spinner\r\n *\r\n * ## Usage\r\n * ````\r\n * <audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\r\n *  <ion-item>\r\n *    <audio-track-play item-left [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>\r\n *    <h3>{{audio.title}}</h3>\r\n *  </ion-item>\r\n * </audio-track>\r\n * ````\r\n * If placed within a ```<ion-thumnbail>``` component it will render as a semi-transparent button layover (see live demo).\r\n * Passing a ```<ion-spinner>``` as a child element will display a loading spinner while loading.\r\n *\r\n * ````\r\n * <audio-track #audio [track]=\"track\" (onFinish)=\"onTrackFinished($event)\">\r\n *   <ion-item>\r\n *       <ion-thumbnail item-left>\r\n *         <img src=\"{{audio.art}}\">\r\n *         <audio-track-play dark [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>\r\n *       </ion-thumbnail>\r\n *       <p><strong>{{audio.title}}</strong></p>\r\n *   </ion-item>\r\n * </audio-track>\r\n * ````\r\n *\r\n * @element audio-track-play\r\n * @parents audio-track\r\n * @export\r\n * @class AudioTrackPlayComponent\r\n */\r\nvar AudioTrackPlayComponent = (function () {\r\n    function AudioTrackPlayComponent(el) {\r\n        this.el = el;\r\n    }\r\n    Object.defineProperty(AudioTrackPlayComponent.prototype, \"light\", {\r\n        set: /**\r\n           * Renders the component using the light theme\r\n           *\r\n           * @property @Input() light\r\n           * @type {boolean}\r\n           */\r\n        function (val) {\r\n            this.el.nativeElement.firstElementChild.classList.add('light');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AudioTrackPlayComponent.prototype, \"dark\", {\r\n        set: /**\r\n           * Renders the component using the dark theme\r\n           *\r\n           * @property @Input() dark\r\n           * @type {boolean}\r\n           */\r\n        function (val) {\r\n            this.el.nativeElement.firstElementChild.classList.add('dark');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioTrackPlayComponent.prototype.toggle = function (event) {\r\n        if (this.audioTrack.isPlaying) {\r\n            this.audioTrack.pause();\r\n        }\r\n        else {\r\n            this.audioTrack.play();\r\n        }\r\n    };\r\n    AudioTrackPlayComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'audio-track-play',\r\n                    template: \"\\n    <button ion-button icon-only clear (click)=\\\"toggle($event)\\\" [disabled]=\\\"audioTrack.error || audioTrack.isLoading\\\">\\n      <ion-icon name=\\\"pause\\\" *ngIf=\\\"audioTrack.isPlaying && !audioTrack.isLoading\\\"></ion-icon>\\n      <ion-icon name=\\\"play\\\" *ngIf=\\\"!audioTrack.isPlaying && !audioTrack.isLoading\\\"></ion-icon>\\n      <ng-content *ngIf=\\\"audioTrack.isLoading && !audioTrack.error\\\"></ng-content>\\n    </button>\\n    \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioTrackPlayComponent.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n    ]; };\r\n    AudioTrackPlayComponent.propDecorators = {\r\n        \"audioTrack\": [{ type: Input },],\r\n        \"light\": [{ type: Input },],\r\n        \"dark\": [{ type: Input },],\r\n    };\r\n    return AudioTrackPlayComponent;\r\n}());\r\nexport { AudioTrackPlayComponent };\r\n//# sourceMappingURL=ionic-audio-track-play-component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-track-play-component.js\n// module id = 717\n// module chunks = 0","import { Pipe } from '@angular/core';\r\n/**\r\n * A pipe to convert milliseconds to a string representation\r\n *\r\n * @export\r\n * @class AudioTimePipe\r\n * @implements {PipeTransform}\r\n */\r\nvar AudioTimePipe = (function () {\r\n    function AudioTimePipe() {\r\n    }\r\n    /**\r\n     * Transforms milliseconds to hh:mm:ss\r\n     *\r\n     * @method transform\r\n     * @param {number} [value] The milliseconds\r\n     * @return {string} hh:mm:ss\r\n     */\r\n    /**\r\n       * Transforms milliseconds to hh:mm:ss\r\n       *\r\n       * @method transform\r\n       * @param {number} [value] The milliseconds\r\n       * @return {string} hh:mm:ss\r\n       */\r\n    AudioTimePipe.prototype.transform = /**\r\n       * Transforms milliseconds to hh:mm:ss\r\n       *\r\n       * @method transform\r\n       * @param {number} [value] The milliseconds\r\n       * @return {string} hh:mm:ss\r\n       */\r\n    function (value) {\r\n        if (value === undefined || Number.isNaN(value))\r\n            return '';\r\n        var s = Math.trunc(value % 60);\r\n        var m = Math.trunc((value / 60) % 60);\r\n        var h = Math.trunc(((value / 60) / 60) % 60);\r\n        return h > 0 ? (h < 10 ? '0' + h : h) + \":\" + (m < 10 ? '0' + m : m) + \":\" + (s < 10 ? '0' + s : s) : (m < 10 ? '0' + m : m) + \":\" + (s < 10 ? '0' + s : s);\r\n    };\r\n    AudioTimePipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'audioTime' },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioTimePipe.ctorParameters = function () { return []; };\r\n    return AudioTimePipe;\r\n}());\r\nexport { AudioTimePipe };\r\n//# sourceMappingURL=ionic-audio-time-pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-time-pipe.js\n// module id = 718\n// module chunks = 0","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\r\nimport { AudioProvider } from './ionic-audio-providers';\r\n/**\r\n * Generated class for the AudioPlaylistItemDirective directive.\r\n *\r\n * See https://angular.io/docs/ts/latest/api/core/index/DirectiveMetadata-class.html\r\n * for more info on Angular Directives.\r\n */\r\nvar AudioPlaylistItemDirective = (function () {\r\n    function AudioPlaylistItemDirective(_audioProvider) {\r\n        this._audioProvider = _audioProvider;\r\n        this.currentTrackChange = new EventEmitter();\r\n    }\r\n    AudioPlaylistItemDirective.prototype.ngOnInit = function () {\r\n        this._index = AudioPlaylistItemDirective._tracklist.push(this.track) - 1;\r\n    };\r\n    AudioPlaylistItemDirective.prototype.onClick = function () {\r\n        this._play();\r\n    };\r\n    AudioPlaylistItemDirective.prototype.next = function () {\r\n        if (AudioPlaylistItemDirective._currentIndex > -1 && AudioPlaylistItemDirective._currentIndex < AudioPlaylistItemDirective._tracklist.length - 1) {\r\n            this._play(++AudioPlaylistItemDirective._currentIndex);\r\n        }\r\n    };\r\n    Object.defineProperty(AudioPlaylistItemDirective.prototype, \"currentIndex\", {\r\n        get: function () {\r\n            return AudioPlaylistItemDirective._currentIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AudioPlaylistItemDirective.prototype._play = function (index) {\r\n        index = index || this._index;\r\n        console.log('Playing', index);\r\n        AudioPlaylistItemDirective._currentIndex = index;\r\n        this.currentTrack = AudioPlaylistItemDirective._tracklist[index];\r\n        this.currentTrackChange.emit(this.currentTrack);\r\n    };\r\n    AudioPlaylistItemDirective._currentIndex = -1;\r\n    AudioPlaylistItemDirective._tracklist = [];\r\n    AudioPlaylistItemDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[audio-playlist-item]' // Attribute selector\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AudioPlaylistItemDirective.ctorParameters = function () { return [\r\n        { type: AudioProvider, },\r\n    ]; };\r\n    AudioPlaylistItemDirective.propDecorators = {\r\n        \"track\": [{ type: Input },],\r\n        \"currentTrack\": [{ type: Input },],\r\n        \"currentTrackChange\": [{ type: Output },],\r\n        \"onClick\": [{ type: HostListener, args: ['click',] },],\r\n    };\r\n    return AudioPlaylistItemDirective;\r\n}());\r\nexport { AudioPlaylistItemDirective };\r\n//# sourceMappingURL=ionic-audio-playlist-item-directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio-playlist-item-directive.js\n// module id = 719\n// module chunks = 0","import { Component } from '@angular/core';\nimport { SharedVars } from '../../providers/shared-vars';\nimport { IonicPage, NavParams} from 'ionic-angular';\nimport { AudioProvider } from 'ionic-audio';\n\n@IonicPage({\n  name: 'TranscriptPage',\n  priority:'low'\n})\n@Component({\n  selector: 'page-transcript',\n  templateUrl: 'transcript.html'\n})\nexport class TranscriptPage {\n  selectedItem:any;\n  track_playing:Boolean = false;\n  myTracks: any[];\n  allTracks: any[];\n  selectedTrack: any;\n  parent:string;\n\n  constructor(private _audioProvider: AudioProvider,private navParams: NavParams, public sharedVars:SharedVars) {\n    this.selectedItem = this.navParams.get('item');\n    this.myTracks = this.selectedItem.content.audio;\n    this.parent = this.navParams.get('parent');\n  }\n\n  ionViewDidEnter(){\n    this.sharedVars.trackView('Transcript - '+this.parent+\":\"+this.selectedItem.id);\n  }\n  ionViewWillLeave() {\n    if(this.track_playing == true){\n      this.selectedTrack = this._audioProvider.tracks[this._audioProvider.current];\n      this._audioProvider.pause();\n      this.sharedVars.trackEvent('Audio','navigation-pause',this.selectedTrack.src);\n      this.track_playing = false;\n    }\n  }\n  ngAfterContentInit() {\n    // get all tracks managed by AudioProvider so we can control playback via the API\n    this.allTracks = this._audioProvider.tracks;\n  }\n  onTrackFinished(track: any) {\n    this.sharedVars.trackEvent('Audio','completed',this.selectedTrack.src);\n    this.track_playing = false;\n  }\n  trackEvent(track: any)  {\n     if ( this.track_playing == true )\n     {\n       this.sharedVars.trackEvent('Audio','pause',this.selectedTrack.src);\n       this.track_playing = false;\n     } else if(this.track_playing == false){\n       this.selectedTrack = this._audioProvider.tracks[this._audioProvider.current];\n       this.sharedVars.trackEvent('Audio','play',this.selectedTrack.src);\n       this.track_playing = true;\n     }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transcript/transcript.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from 'ionic-angular';\r\nimport { AudioTrackComponent } from './ionic-audio-track-component';\r\nimport { AudioTrackProgressComponent, AudioTrackProgressBarComponent } from './ionic-audio-track-progress-component';\r\nimport { AudioTrackPlayComponent } from './ionic-audio-track-play-component';\r\nimport { AudioTimePipe } from './ionic-audio-time-pipe';\r\nimport { AudioProvider } from './ionic-audio-providers';\r\nimport { AudioPlaylistItemDirective } from './ionic-audio-playlist-item-directive';\r\nexport function declarations() {\r\n    return [\r\n        AudioTrackComponent,\r\n        AudioTrackProgressComponent,\r\n        AudioTrackProgressBarComponent,\r\n        AudioTrackPlayComponent,\r\n        AudioTimePipe,\r\n        AudioPlaylistItemDirective\r\n    ];\r\n}\r\nvar IonicAudioModule = (function () {\r\n    function IonicAudioModule() {\r\n    }\r\n    /**\r\n     * Configures Ionic Audio to use either Cordova or HTML5 audio.\r\n     * If no ```audioProvider``` is set it will automatically choose one based on the current environment\r\n     */\r\n    /**\r\n       * Configures Ionic Audio to use either Cordova or HTML5 audio.\r\n       * If no ```audioProvider``` is set it will automatically choose one based on the current environment\r\n       */\r\n    IonicAudioModule.forRoot = /**\r\n       * Configures Ionic Audio to use either Cordova or HTML5 audio.\r\n       * If no ```audioProvider``` is set it will automatically choose one based on the current environment\r\n       */\r\n    function (audioProviderFactory) {\r\n        return {\r\n            ngModule: IonicAudioModule,\r\n            providers: [\r\n                { provide: AudioProvider, useFactory: audioProviderFactory }\r\n            ]\r\n        };\r\n    };\r\n    IonicAudioModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule, IonicModule],\r\n                    declarations: declarations(),\r\n                    exports: declarations(),\r\n                    providers: [],\r\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    IonicAudioModule.ctorParameters = function () { return []; };\r\n    return IonicAudioModule;\r\n}());\r\nexport { IonicAudioModule };\r\n//# sourceMappingURL=ionic-audio.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic-audio/dist/ionic-audio.module.js\n// module id = 735\n// module chunks = 0"],"sourceRoot":""}